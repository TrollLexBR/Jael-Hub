local Library = {}

-- Services
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

local function GetXY(GuiObject)
	local Max, May = GuiObject.AbsoluteSize.X, GuiObject.AbsoluteSize.Y
	local Px, Py = math.clamp(Mouse.X - GuiObject.AbsolutePosition.X, 0, Max), math.clamp(Mouse.Y - GuiObject.AbsolutePosition.Y, 0, May)
	return Px/Max, Py/May
end

local TweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)

function Library:tween(object, goal, callback)
	local tween = TweenService:Create(object, TweenInfo, goal)
	tween.Completed:Connect(callback or function() end)
	tween:Play()
end

function Library:NewWindow(hubName, gameName, version, discord)

	if CoreGui:FindFirstChild("JaelLibrary") then
		CoreGui:FindFirstChild("JaelLibrary"):Destroy()
	end

	hubName = hubName or "Jael Library"
	gameName = gameName or "Baseplate"
	version = version or "v1.0"
	discord = discord or "discord/00000"

	local GUI = {}

	-- Render
	do
		-- StarterGui.JaelLibrary
		GUI["1"] = Instance.new("ScreenGui", RunService:IsStudio() and game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui") or CoreGui);
		GUI["1"]["Name"] = "JaelLibrary";
		GUI["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
		GUI["1"]["ResetOnSpawn"] = false

		-- StarterGui.JaelLibrary.MainFrame
		GUI["2"] = Instance.new("Frame", GUI["1"]);
		GUI["2"]["BackgroundColor3"] = Color3.fromRGB(26, 26, 26);
		GUI["2"]["Size"] = UDim2.new(0, 683, 0, 464);
		GUI["2"]["Position"] = UDim2.new(0.23853209614753723, 0, 0.21358025074005127, 0);
		GUI["2"]["Name"] = [[MainFrame]];
		GUI["2"]["Active"] = true;
		GUI["2"]["Draggable"] = true;

		UserInputService.InputBegan:Connect(function(Key,Processed)
			if Processed then return end
			if Key.KeyCode == Enum.KeyCode.RightControl then -- Change 'R' to your KeyCode.
				GUI["2"].Visible = not GUI["2"].Visible
			end
		end)

		-- StarterGui.JaelLibrary.MainFrame.Tabs
		GUI["18"] = Instance.new("Frame", GUI["2"]);
		GUI["18"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["18"]["BackgroundTransparency"] = 1;
		GUI["18"]["Size"] = UDim2.new(0, 490, 0, 419);
		GUI["18"]["Position"] = UDim2.new(0.28257685899734497, 0, 0.09698276221752167, 0);
		GUI["18"]["Name"] = [[Tabs]];

		-- StarterGui.JaelLibrary.MainFrame.MainFrameUICorner
		GUI["3"] = Instance.new("UICorner", GUI["2"]);
		GUI["3"]["Name"] = [[MainFrameUICorner]];
		GUI["3"]["CornerRadius"] = UDim.new(0, 5);

		-- StarterGui.JaelLibrary.MainFrame.SideBar
		GUI["4"] = Instance.new("Frame", GUI["2"]);
		GUI["4"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
		GUI["4"]["Size"] = UDim2.new(0, 189, 0, 464);
		GUI["4"]["Name"] = [[SideBar]];

		-- StarterGui.JaelLibrary.MainFrame.SideBar.SideBarUICorner
		GUI["5"] = Instance.new("UICorner", GUI["4"]);
		GUI["5"]["Name"] = [[SideBarUICorner]];
		GUI["5"]["CornerRadius"] = UDim.new(0, 5);

		-- StarterGui.JaelLibrary.MainFrame.SideBar.NameFrame
		GUI["6"] = Instance.new("Frame", GUI["4"]);
		GUI["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["6"]["BackgroundTransparency"] = 1;
		GUI["6"]["Size"] = UDim2.new(0, 189, 0, 100);
		GUI["6"]["Name"] = [[NameFrame]];

		-- StarterGui.JaelLibrary.MainFrame.SideBar.NameFrame.GameNameLabel
		GUI["7"] = Instance.new("TextLabel", GUI["6"]);
		GUI["7"]["TextWrapped"] = true;
		GUI["7"]["TextXAlignment"] = Enum.TextXAlignment.Left;
		GUI["7"]["TextYAlignment"] = Enum.TextYAlignment.Top;
		GUI["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["7"]["TextSize"] = 20;
		GUI["7"]["TextColor3"] = Color3.fromRGB(102, 5, 172);
		GUI["7"]["Size"] = UDim2.new(0, 173, 0, 41);
		GUI["7"]["Text"] = gameName;
		GUI["7"]["Name"] = [[GameNameLabel]];
		GUI["7"]["Font"] = Enum.Font.Gotham;
		GUI["7"]["BackgroundTransparency"] = 1;
		GUI["7"]["Position"] = UDim2.new(0.038922831416130066, 0, 0.4142857491970062, 0);

		-- StarterGui.JaelLibrary.MainFrame.SideBar.NameFrame.HubNameLabel
		GUI["8"] = Instance.new("TextLabel", GUI["6"]);
		GUI["8"]["TextWrapped"] = true;
		GUI["8"]["TextXAlignment"] = Enum.TextXAlignment.Left;
		GUI["8"]["TextScaled"] = true;
		GUI["8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["8"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["8"]["TextSize"] = 27;
		GUI["8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["8"]["Size"] = UDim2.new(0, 174, 0, 35);
		GUI["8"]["Text"] = hubName;
		GUI["8"]["Name"] = [[HubNameLabel]];
		GUI["8"]["Font"] = Enum.Font.Gotham;
		GUI["8"]["BackgroundTransparency"] = 1;
		GUI["8"]["Position"] = UDim2.new(0.038922831416130066, 0, 0.0657142624258995, 0);

		-- StarterGui.JaelLibrary.MainFrame.SideBar.ButtonsHolder
		GUI["9"] = Instance.new("Frame", GUI["4"]);
		GUI["9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["9"]["BackgroundTransparency"] = 1;
		GUI["9"]["Size"] = UDim2.new(0, 135, 0, 310);
		GUI["9"]["Position"] = UDim2.new(0.1404874324798584, 0, 0.2877081632614136, 0);
		GUI["9"]["Name"] = [[ButtonsHolder]];

		-- StarterGui.JaelLibrary.MainFrame.SideBar.ButtonsHolder.UIListLayout
		GUI["a"] = Instance.new("UIListLayout", GUI["9"]);
		GUI["a"]["Padding"] = UDim.new(0.014000000432133675, 0);
		GUI["a"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

		-- StarterGui.JaelLibrary.MainFrame.TopBar
		GUI["14"] = Instance.new("Frame", GUI["2"]);
		GUI["14"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
		GUI["14"]["Size"] = UDim2.new(0, 490, 0, 41);
		GUI["14"]["Position"] = UDim2.new(0.28257685899734497, 0, 0, 0);
		GUI["14"]["Name"] = [[TopBar]];

		-- StarterGui.JaelLibrary.MainFrame.TopBar.TopBarUICorner
		GUI["15"] = Instance.new("UICorner", GUI["14"]);
		GUI["15"]["Name"] = [[TopBarUICorner]];
		GUI["15"]["CornerRadius"] = UDim.new(0, 5);

		-- StarterGui.JaelLibrary.MainFrame.TopBar.DiscordLabel
		GUI["16"] = Instance.new("TextLabel", GUI["14"]);
		GUI["16"]["TextWrapped"] = true;
		GUI["16"]["TextXAlignment"] = Enum.TextXAlignment.Left;
		GUI["16"]["TextScaled"] = true;
		GUI["16"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["16"]["TextStrokeColor3"] = Color3.fromRGB(120, 138, 255);
		GUI["16"]["TextSize"] = 27;
		GUI["16"]["TextColor3"] = Color3.fromRGB(120, 138, 255);
		GUI["16"]["Size"] = UDim2.new(0, 100, 0, 35);
		GUI["16"]["Text"] = discord;
		GUI["16"]["Name"] = [[DiscordLabel]];
		GUI["16"]["Font"] = Enum.Font.Gotham;
		GUI["16"]["BackgroundTransparency"] = 1;
		GUI["16"]["Position"] = UDim2.new(0.779591978, 0, 0.0657143965, 0);

		-- StarterGui.JaelLibrary.MainFrame.TopBar.VersionLabel
		GUI["17"] = Instance.new("TextLabel", GUI["14"]);
		GUI["17"]["TextWrapped"] = true;
		GUI["17"]["TextXAlignment"] = Enum.TextXAlignment.Right;
		GUI["17"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["17"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["17"]["TextSize"] = 10;
		GUI["17"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["17"]["Size"] = UDim2.new(0, 38, 0, 35);
		GUI["17"]["Text"] = version;
		GUI["17"]["Name"] = [[VersionLabel]];
		GUI["17"]["Font"] = Enum.Font.Gotham;
		GUI["17"]["BackgroundTransparency"] = 1;
		GUI["17"]["Position"] = UDim2.new(0.685714424, 0, 0.0657143965, 0);



		------------------------------------

		-- StarterGui.JaelLibrary.MainFrame.SideBar.HomeButton
		GUI["11"] = Instance.new("TextButton", GUI["4"]);
		GUI["11"]["TextSize"] = 17;
		GUI["11"]["BackgroundColor3"] = Color3.fromRGB(102, 5, 172);
		GUI["11"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
		GUI["11"]["Size"] = UDim2.new(0.7142857313156128, 0, 0, 35);
		GUI["11"]["Name"] = [[HomeButton]];
		GUI["11"]["Text"] = [[]];
		GUI["11"]["Font"] = Enum.Font.SourceSans;
		GUI["11"]["Position"] = UDim2.new(0.13519643247127533, 0, 0.2, 2);
		GUI["11"].MouseButton1Click:Connect(function()
			for i, v in pairs(GUI["18"]:GetChildren()) do
				v.Visible = false
				GUI["19"]["Visible"] = true
			end

			for i, v in pairs(GUI["9"]:GetChildren()) do
				if v:IsA("TextButton") then
					Library:tween(v, {BackgroundColor3 = Color3.fromRGB(35, 35, 35)})
					Library:tween(v.TextLabel, {TextColor3 = Color3.fromRGB(116, 116, 116)})

					Library:tween(GUI["11"], {BackgroundColor3 = Color3.fromRGB(101, 4, 171)})
					Library:tween(GUI["11"].homeTextLabel, {TextColor3 = Color3.fromRGB(255, 255, 255)})
				end
			end
		end)

		-- StarterGui.JaelLibrary.MainFrame.SideBar.HomeButton.homeUICorner
		GUI["12"] = Instance.new("UICorner", GUI["11"]);
		GUI["12"]["Name"] = [[homeUICorner]];
		GUI["12"]["CornerRadius"] = UDim.new(0, 4);

		-- StarterGui.JaelLibrary.MainFrame.SideBar.HomeButton.homeTextLabel
		GUI["13"] = Instance.new("TextLabel", GUI["11"]);
		GUI["13"]["TextWrapped"] = true;
		GUI["13"]["TextXAlignment"] = Enum.TextXAlignment.Left;
		GUI["13"]["TextScaled"] = true;
		GUI["13"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["13"]["TextSize"] = 15;
		GUI["13"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["13"]["Size"] = UDim2.new(0, 122, 0, 13);
		GUI["13"]["Text"] = [[Home]];
		GUI["13"]["Name"] = [[homeTextLabel]];
		GUI["13"]["Font"] = Enum.Font.Gotham;
		GUI["13"]["BackgroundTransparency"] = 1;
		GUI["13"]["Position"] = UDim2.new(0.0962962955236435, 0, 0.3142857253551483, 0);

		-- StarterGui.JaelLibrary.MainFrame.Tabs.HomeFrame
		GUI["19"] = Instance.new("Frame", GUI["18"]);
		GUI["19"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
		GUI["19"]["Size"] = UDim2.new(0, 490, 0, 419);
		GUI["19"]["Visible"] = true;
		GUI["19"]["Name"] = [[HomeFrame]];

		-- StarterGui.JaelLibrary.MainFrame.Tabs.HomeFrame.HomeFrameUICorner
		GUI["1a"] = Instance.new("UICorner", GUI["19"]);
		GUI["1a"]["Name"] = [[HomeFrameUICorner]];
		GUI["1a"]["CornerRadius"] = UDim.new(0, 5);

		-- StarterGui.JaelLibrary.MainFrame.Tabs.HomeFrame.WelcomeLabel
		GUI["1b"] = Instance.new("TextLabel", GUI["19"]);
		GUI["1b"]["TextWrapped"] = true;
		GUI["1b"]["TextXAlignment"] = Enum.TextXAlignment.Left;
		GUI["1b"]["TextScaled"] = true;
		GUI["1b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["1b"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["1b"]["TextSize"] = 27;
		GUI["1b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["1b"]["Size"] = UDim2.new(0, 477, 0, 42);
		GUI["1b"]["Text"] = "Welcome, "..LocalPlayer.DisplayName.."!";
		GUI["1b"]["Name"] = [[WelcomeLabel]];
		GUI["1b"]["Font"] = Enum.Font.Gotham;
		GUI["1b"]["BackgroundTransparency"] = 1;
		GUI["1b"]["Position"] = UDim2.new(0.012392254546284676, 0, 0.008435014635324478, 0);

		-- StarterGui.JaelLibrary.MainFrame.Tabs.HomeFrame.Bar
		GUI["1c"] = Instance.new("Frame", GUI["19"]);
		GUI["1c"]["BorderSizePixel"] = 0;
		GUI["1c"]["BackgroundColor3"] = Color3.fromRGB(102, 5, 172);
		GUI["1c"]["Size"] = UDim2.new(0, 477, 0, 1);
		GUI["1c"]["Position"] = UDim2.new(0.01224489789456129, 0, 0.10739856958389282, 0);
		GUI["1c"]["Name"] = [[Bar]];

		-- StarterGui.JaelLibrary.MainFrame.Tabs.HomeFrame.FeaturesFrame
		GUI["1d"] = Instance.new("Frame", GUI["19"]);
		GUI["1d"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
		GUI["1d"]["Size"] = UDim2.new(0, 477, 0, 353);
		GUI["1d"]["Position"] = UDim2.new(0.01224489789456129, 0, 0.13722334802150726, 0);
		GUI["1d"]["Name"] = [[FeaturesFrame]];

		-- StarterGui.JaelLibrary.MainFrame.Tabs.HomeFrame.FeaturesFrame.FeaturesFrameUICorner
		GUI["1e"] = Instance.new("UICorner", GUI["1d"]);
		GUI["1e"]["Name"] = [[FeaturesFrameUICorner]];
		GUI["1e"]["CornerRadius"] = UDim.new(0, 5);

		-- StarterGui.JaelLibrary.MainFrame.Tabs.HomeFrame.FeaturesFrame.FeaturesScrolling
		GUI["1f"] = Instance.new("ScrollingFrame", GUI["1d"]);
		GUI["1f"]["Active"] = true;
		GUI["1f"]["BorderSizePixel"] = 0;
		GUI["1f"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
		GUI["1f"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
		GUI["1f"]["ScrollBarThickness"] = 0;
		GUI["1f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		GUI["1f"]["BackgroundTransparency"] = 1;
		GUI["1f"]["Size"] = UDim2.new(1, 0, 1, 0);
		GUI["1f"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
		GUI["1f"]["ScrollBarThickness"] = 0;
		GUI["1f"]["Name"] = [[FeaturesScrolling]];

		-- StarterGui.JaelLibrary.MainFrame.Tabs.HomeFrame.FeaturesFrame.FeaturesScrooling.UIListLayout
		GUI["20"] = Instance.new("UIListLayout", GUI["1f"]);
		GUI["20"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

		-- StarterGui.JaelLibrary.MainFrame.Tabs.HomeFrame.FeaturesFrame.FeaturesScrooling.UIPadding
		GUI["22"] = Instance.new("UIPadding", GUI["1f"]);
		GUI["22"]["PaddingRight"] = UDim.new(0, 5);
		GUI["22"]["PaddingBottom"] = UDim.new(0, 5);
		GUI["22"]["PaddingLeft"] = UDim.new(0, 5);


		-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.HomeFrameUICorner
		GUI["25"] = Instance.new("UICorner", GUI["24"]);
		GUI["25"]["Name"] = [[HomeFrameUICorner]];
		GUI["25"]["CornerRadius"] = UDim.new(0, 5);
	end

	function GUI:FeatureNewGame(gameName)

		gameName = gameName or "- New Game"

		local NewGame = {}

		do
			-- StarterGui.JaelLibrary.MainFrame.Tabs.HomeFrame.FeaturesFrame.FeaturesScrooling.FeatureGameName
			NewGame["21"] = Instance.new("TextLabel", GUI["1f"]);
			NewGame["21"]["TextWrapped"] = true;
			NewGame["21"]["TextXAlignment"] = Enum.TextXAlignment.Left;
			NewGame["21"]["TextScaled"] = true;
			NewGame["21"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			NewGame["21"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
			NewGame["21"]["TextSize"] = 27;
			NewGame["21"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
			NewGame["21"]["Size"] = UDim2.new(0, 471, 0, 42);
			NewGame["21"]["Text"] = gameName;
			NewGame["21"]["Name"] = [[FeatureGameName]];
			NewGame["21"]["Font"] = Enum.Font.Gotham;
			NewGame["21"]["BackgroundTransparency"] = 1;
		end

		return NewGame
	end

	function GUI:FeatureNewFeature(featureLabel)
		featureLabel = featureLabel or "- New Feature"

		local feature = {}

		do
			-- StarterGui.JaelLibrary.MainFrame.Tabs.HomeFrame.FeaturesFrame.FeaturesScrooling.NewFeature
			feature["23"] = Instance.new("TextLabel", GUI["1f"]);
			feature["23"]["TextWrapped"] = true;
			feature["23"]["TextXAlignment"] = Enum.TextXAlignment.Left;
			feature["23"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			feature["23"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255);
			feature["23"]["TextSize"] = 20;
			feature["23"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
			feature["23"]["Size"] = UDim2.new(0, 471, 0, 24);
			feature["23"]["Text"] = featureLabel;
			feature["23"]["Name"] = [[NewFeature]];
			feature["23"]["Font"] = Enum.Font.Gotham;
			feature["23"]["BackgroundTransparency"] = 1;
			feature["23"]["Position"] = UDim2.new(0, 0, 0.12068965286016464, 0);
		end

		return feature
	end

	function GUI:NewTab(tabName)

		tabName = tabName or "New Tab"

		local Tab = {}

		-- Render
		do
			-- StarterGui.JaelLibrary.MainFrame.SideBar.ButtonsHolder.Button
			Tab["e"] = Instance.new("TextButton", GUI["9"]);
			Tab["e"]["TextSize"] = 17;
			Tab["e"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
			Tab["e"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
			Tab["e"]["Size"] = UDim2.new(1, 0, 0, 35);
			Tab["e"]["Name"] = [[Button]];
			Tab["e"]["Text"] = [[]];
			Tab["e"]["Font"] = Enum.Font.SourceSans;

			-- StarterGui.JaelLibrary.MainFrame.SideBar.ButtonsHolder.Diactvated.mainUICorner
			Tab["f"] = Instance.new("UICorner", Tab["e"]);
			Tab["f"]["Name"] = [[mainUICorner]];
			Tab["f"]["CornerRadius"] = UDim.new(0, 4);

			-- StarterGui.JaelLibrary.MainFrame.SideBar.ButtonsHolder.Diactvated.TextLabel
			Tab["10"] = Instance.new("TextLabel", Tab["e"]);
			Tab["10"]["TextWrapped"] = true;
			Tab["10"]["TextXAlignment"] = Enum.TextXAlignment.Left;
			Tab["10"]["TextScaled"] = true;
			Tab["10"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			Tab["10"]["TextSize"] = 15;
			Tab["10"]["TextColor3"] = Color3.fromRGB(117, 117, 117);
			Tab["10"]["Size"] = UDim2.new(0, 122, 0, 13);
			Tab["10"]["Text"] = tabName;
			Tab["10"]["Font"] = Enum.Font.Gotham;
			Tab["10"]["BackgroundTransparency"] = 1;
			Tab["10"]["Position"] = UDim2.new(0.0962962955236435, 0, 0.3142857253551483, 0);

			-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab
			Tab["24"] = Instance.new("Frame", GUI["18"]);
			Tab["24"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
			Tab["24"]["Size"] = UDim2.new(0, 490, 0, 419);
			Tab["24"]["ClipsDescendants"] = true;
			Tab["24"]["Visible"] = false
			Tab["24"]["Name"] = [[Newtab]];

			-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling
			Tab["26"] = Instance.new("ScrollingFrame", Tab["24"]);
			Tab["26"]["Active"] = true;
			Tab["26"]["BorderSizePixel"] = 0;
			Tab["26"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
			Tab["26"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			Tab["26"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
			Tab["26"]["BackgroundTransparency"] = 1;
			Tab["26"]["Size"] = UDim2.new(1, 0, 1, 0);
			Tab["26"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
			Tab["26"]["ScrollBarThickness"] = 0;
			Tab["26"]["Name"] = [[TabScrolling]];

			-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.TabScrollingUIPadding
			Tab["27"] = Instance.new("UIPadding", Tab["26"]);
			Tab["27"]["PaddingTop"] = UDim.new(0, 5);
			Tab["27"]["Name"] = [[TabScrollingUIPadding]];
			Tab["27"]["PaddingRight"] = UDim.new(0, 5);
			Tab["27"]["PaddingBottom"] = UDim.new(0, 5);
			Tab["27"]["PaddingLeft"] = UDim.new(0, 5);

			-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.TabScrollingUIListLayout
			Tab["28"] = Instance.new("UIListLayout", Tab["26"]);
			Tab["28"]["Name"] = [[TabScrollingUIListLayout]];
			Tab["28"]["Padding"] = UDim.new(0, 5);
			Tab["28"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

			-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Button.MainButton.MainButtonUICorner
			Tab["19bbb"] = Instance.new("UICorner", Tab["24"]);
			Tab["19bbb"]["Name"] = [[MainButtonUICorner]];
			Tab["19bbb"]["CornerRadius"] = UDim.new(0, 5);

			Tab["e"].MouseButton1Click:Connect(function()
				for i, v in pairs(GUI["18"]:GetChildren()) do
					v.Visible = false
					Tab["24"].Visible = true
				end

				for i, v in pairs(GUI["9"]:GetChildren()) do
					if v:IsA("TextButton") then
						Library:tween(v, {BackgroundColor3 = Color3.fromRGB(35, 35, 35)})
						Library:tween(v.TextLabel, {TextColor3 = Color3.fromRGB(116, 116, 116)})

						Library:tween(GUI["11"], {BackgroundColor3 = Color3.fromRGB(35, 35, 35)})
						Library:tween(GUI["11"].homeTextLabel, {TextColor3 = Color3.fromRGB(116, 116, 116)})

						Library:tween(Tab["e"], {BackgroundColor3 = Color3.fromRGB(101, 4, 171)})
						Library:tween(Tab["e"].TextLabel, {TextColor3 = Color3.fromRGB(255, 255, 255)})
					end
				end
			end)
		end

		function Tab:NewLabel(label)

			label = label or "New Label"

			local Label = {}

			-- Render
			do
				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Label
				Label["29"] = Instance.new("TextLabel", Tab["26"]);
				Label["29"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				Label["29"]["TextSize"] = 14;
				Label["29"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				Label["29"]["Size"] = UDim2.new(0, 478, 0, 50);
				Label["29"]["Name"] = [[Label]];
				Label["29"]["Font"] = Enum.Font.Gotham;
				Label["29"]["Text"] = label


				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Label.LabelUICorner
				Label["2a"] = Instance.new("UICorner", Label["29"]);
				Label["2a"]["Name"] = [[LabelUICorner]];
				Label["2a"]["CornerRadius"] = UDim.new(0, 5);
			end

			return Label
		end

		function Tab:NewButton(label, callback)

			label = label or "New Button"
			callback = callback or function(v) print(v) end

			local Button = {}

			-- Render
			do
				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Button
				Button["2b"] = Instance.new("Frame", Tab["26"]);
				Button["2b"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				Button["2b"]["Size"] = UDim2.new(0, 478, 0, 50);
				Button["2b"]["Name"] = [[Button]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Button.ButtonUICorner
				Button["2c"] = Instance.new("UICorner", Button["2b"]);
				Button["2c"]["Name"] = [[ButtonUICorner]];
				Button["2c"]["CornerRadius"] = UDim.new(0, 5);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Button.ButtonLabel
				Button["2d"] = Instance.new("TextLabel", Button["2b"]);
				Button["2d"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				Button["2d"]["TextSize"] = 14;
				Button["2d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				Button["2d"]["Size"] = UDim2.new(1, 0, 1, 0);
				Button["2d"]["Text"] = label;
				Button["2d"]["Name"] = [[ButtonLabel]];
				Button["2d"]["Font"] = Enum.Font.Gotham;
				Button["2d"]["BackgroundTransparency"] = 1;

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Button.MainButton
				Button["2e"] = Instance.new("TextButton", Button["2b"]);
				Button["2e"]["TextSize"] = 14;
				Button["2e"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				Button["2e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				Button["2e"]["Size"] = UDim2.new(1, 0, 1, 0);
				Button["2e"]["Name"] = [[MainButton]];
				Button["2e"]["Text"] = [[]];
				Button["2e"]["Font"] = Enum.Font.Gotham;
				Button["2e"]["BackgroundTransparency"] = 1;

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Button.MainButton.MainButtonUICorner
				Button["2f"] = Instance.new("UICorner", Button["2e"]);
				Button["2f"]["Name"] = [[MainButtonUICorner]];
				Button["2f"]["CornerRadius"] = UDim.new(0, 5);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Button.ButtonUIStroke
				Button["30"] = Instance.new("UIStroke", Button["2b"]);
				Button["30"]["Color"] = Color3.fromRGB(102, 5, 172);
				Button["30"]["Thickness"] = 0;
				Button["30"]["Name"] = [[ButtonUIStroke]];

				local inOut = false

				Button["2e"].MouseEnter:Connect(function()
					Library:tween(Button["30"], {["Thickness"] = 1})
					inOut = true
				end)

				Button["2e"].MouseLeave:Connect(function()
					Library:tween(Button["30"], {["Thickness"] = 0})
					inOut = false
				end)

				Button["2e"].MouseButton1Click:Connect(function()
					Library:tween(Button["30"], {["Thickness"] = 3})
					callback()

					wait(.15)
					Library:tween(Button["30"], {["Thickness"] = 0})
				end)

			end

			return Button
		end

		function Tab:NewSlider(label, min, max, default, callback)

			label = label or "New Slider"
			min = min or 0
			max = max or 100
			default = default or 16
			callback = callback or function(v) print(v) end

			if min > min then
				local ValueBefore = min
				min, max = max, ValueBefore
			end

			local SliderDef = math.clamp(default, min, max) or math.clamp(50, min, max)
			local DefaultScale =  (SliderDef - min) / (max - min)

			local Slider = {}

			-- Render
			do
				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Slider
				Slider["31"] = Instance.new("Frame", Tab["26"]);
				Slider["31"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				Slider["31"]["Size"] = UDim2.new(0, 478, 0, 55);
				Slider["31"]["Position"] = UDim2.new(0, 0, 0.26894864439964294, 0);
				Slider["31"]["Name"] = [[Slider]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Slider.ButtonUICorner
				Slider["32"] = Instance.new("UICorner", Slider["31"]);
				Slider["32"]["Name"] = [[ButtonUICorner]];
				Slider["32"]["CornerRadius"] = UDim.new(0, 5);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Slider.ButtonLabel
				Slider["33"] = Instance.new("TextLabel", Slider["31"]);
				Slider["33"]["TextXAlignment"] = Enum.TextXAlignment.Left;
				Slider["33"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				Slider["33"]["TextSize"] = 14;
				Slider["33"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				Slider["33"]["Size"] = UDim2.new(0.8451882600784302, 0, 0.49115437269210815, 0);
				Slider["33"]["Text"] = label;
				Slider["33"]["Name"] = [[ButtonLabel]];
				Slider["33"]["Font"] = Enum.Font.Gotham;
				Slider["33"]["BackgroundTransparency"] = 1;
				Slider["33"]["Position"] = UDim2.new(0.02301255241036415, 0, 0, 0);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Slider.ButtonLabel
				Slider["34"] = Instance.new("TextLabel", Slider["31"]);
				Slider["34"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				Slider["34"]["TextSize"] = 14;
				Slider["34"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				Slider["34"]["Size"] = UDim2.new(0.11924700438976288, 0, 0.49115437269210815, 0);
				Slider["34"]["Text"] = tostring(SliderDef);
				Slider["34"]["Name"] = [[ButtonLabel]];
				Slider["34"]["Font"] = Enum.Font.Gotham;
				Slider["34"]["BackgroundTransparency"] = 1;
				Slider["34"]["Position"] = UDim2.new(0.8682008385658264, 0, 0, 0);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Slider.Background
				Slider["35"] = Instance.new("Frame", Slider["31"]);
				Slider["35"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
				Slider["35"]["Size"] = UDim2.new(0, 454, 0, 19);
				Slider["35"]["Position"] = UDim2.new(0.02301255241036415, 0, 0.5175759196281433, 0);
				Slider["35"]["Name"] = [[Background]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Slider.Background.BackgroundUICorner
				Slider["36"] = Instance.new("UICorner", Slider["35"]);
				Slider["36"]["Name"] = [[BackgroundUICorner]];
				Slider["36"]["CornerRadius"] = UDim.new(0, 5);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Slider.Background.SliderButton
				Slider["37"] = Instance.new("TextButton", Slider["35"]);
				Slider["37"]["TextSize"] = 14;
				Slider["37"]["BackgroundColor3"] = Color3.fromRGB(102, 5, 172);
				Slider["37"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
				Slider["37"]["Size"] = UDim2.new(1, 0, 1, 0);
				Slider["37"]["Name"] = [[SliderButton]];
				Slider["37"]["Text"] = [[]];
				Slider["37"]["Font"] = Enum.Font.SourceSans;
				Slider["37"]["BackgroundTransparency"] = 1;

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Slider.Background.SliderButton.MainSlider
				Slider["38"] = Instance.new("Frame", Slider["37"]);
				Slider["38"]["BackgroundColor3"] = Color3.fromRGB(102, 5, 172);
				Slider["38"]["Size"] = UDim2.new(1, 0, 1, 0);
				Slider["38"]["Name"] = [[MainSlider]];
				Slider["38"]["BorderSizePixel"] = 0

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Slider.Background.SliderButton.MainSlider.SliderUICorner
				Slider["39"] = Instance.new("UICorner", Slider["38"]);
				Slider["39"]["Name"] = [[SliderUICorner]];
				Slider["39"]["CornerRadius"] = UDim.new(0, 5);

				local MinSize = 10
				local MaxSize = 36

				local SizeFromScale = (MinSize +  (MaxSize - MinSize)) * DefaultScale
				SizeFromScale = SizeFromScale - (SizeFromScale % 2)

				Slider["38"].Size = UDim2.new(0, math.clamp(Mouse.X - Slider["38"].AbsolutePosition.X, 0, 454), 1, 0)

				Slider["37"].MouseButton1Down:Connect(function()
					local MouseMove, MouseKill
					MouseMove = Mouse.Move:Connect(function()
						local Px = GetXY(Slider["37"])
						local SizeFromScale = (MinSize +  (MaxSize - MinSize)) * Px
						local Value = math.floor(min + ((max - min) * Px))
						SizeFromScale = SizeFromScale - (SizeFromScale % 2)
						Slider["38"].Size = UDim2.new(0, math.clamp(Mouse.X - Slider["38"].AbsolutePosition.X, 0, 454), 1, 0)
						--Library:tween(Slider["38"], {Size = UDim2.fromScale(Px, 1)})
						Slider["34"].Text = tostring(Value)
						callback(Value)
					end)
					MouseKill = UserInputService.InputEnded:Connect(function(UserInput)
						if UserInput.UserInputType == Enum.UserInputType.MouseButton1 then
							MouseMove:Disconnect()
							MouseKill:Disconnect()
						end
					end)
				end)

				Slider["37"].MouseButton1Down:Connect(function()
					local MouseMove, MouseKill

					local Px = GetXY(Slider["37"])
					local SizeFromScale = (MinSize +  (MaxSize - MinSize)) * Px
					local Value = math.floor(min + ((max - min) * Px))
					SizeFromScale = SizeFromScale - (SizeFromScale % 2)
					Slider["38"].Size = UDim2.new(0, math.clamp(Mouse.X - Slider["38"].AbsolutePosition.X, 0, 454), 1, 0)
					--Library:tween(Slider["38"], {Size = UDim2.fromScale(Px, 1)})
					Slider["34"].Text = tostring(Value)
					callback(Value)

					MouseKill = UserInputService.InputEnded:Connect(function(UserInput)
						if UserInput.UserInputType == Enum.UserInputType.MouseButton1 then

							MouseKill:Disconnect()
						end
					end)
				end)


			end

			return Slider
		end

		function Tab:NewToggle(label, callback)

			local State = false

			label = label or "New Toggle"
			callback = callback or function() end


			local Toggle = {}

			-- Render
			do
				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Toggle
				Toggle["47"] = Instance.new("Frame", Tab["26"]);
				Toggle["47"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				Toggle["47"]["Size"] = UDim2.new(0, 478, 0, 50);
				Toggle["47"]["Name"] = [[Toggle]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Toggle.ToggleUICorner
				Toggle["48"] = Instance.new("UICorner", Toggle["47"]);
				Toggle["48"]["Name"] = [[ToggleUICorner]];
				Toggle["48"]["CornerRadius"] = UDim.new(0, 5);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Toggle.ToggleLabel
				Toggle["49"] = Instance.new("TextLabel", Toggle["47"]);
				Toggle["49"]["TextXAlignment"] = Enum.TextXAlignment.Left;
				Toggle["49"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				Toggle["49"]["TextSize"] = 14;
				Toggle["49"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				Toggle["49"]["Size"] = UDim2.new(0.8012552857398987, 0, 1, 0);
				Toggle["49"]["Text"] = label;
				Toggle["49"]["Name"] = [[ToggleLabel]];
				Toggle["49"]["Font"] = Enum.Font.Gotham;
				Toggle["49"]["BackgroundTransparency"] = 1;
				Toggle["49"]["Position"] = UDim2.new(0.02301255241036415, 0, 0, 0);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Toggle.ToggleMainButton
				Toggle["4a"] = Instance.new("TextButton", Toggle["47"]);
				Toggle["4a"]["TextSize"] = 14;
				Toggle["4a"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
				Toggle["4a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				Toggle["4a"]["Size"] = UDim2.new(0.12275687605142593, 0, 0.5199999809265137, 0);
				Toggle["4a"]["Name"] = [[ToggleMainButton]];
				Toggle["4a"]["Text"] = [[]];
				Toggle["4a"]["Font"] = Enum.Font.Gotham;
				Toggle["4a"]["Position"] = UDim2.new(0.8646907806396484, 0, 0.23999999463558197, 0);
				Toggle["4a"]["BackgroundTransparency"] = 1;

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Toggle.ToggleMainButton.Background
				Toggle["4b"] = Instance.new("Frame", Toggle["4a"]);
				Toggle["4b"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
				Toggle["4b"]["Size"] = UDim2.new(1, 0, 1, 0);
				Toggle["4b"]["Name"] = [[Background]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Toggle.ToggleMainButton.Background.MainButtonUICorner
				Toggle["4c"] = Instance.new("UICorner", Toggle["4b"]);
				Toggle["4c"]["Name"] = [[MainButtonUICorner]];
				Toggle["4c"]["CornerRadius"] = UDim.new(0, 5);



				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Toggle.ToggleMainButton.Background.Frame.MainButtonUICorner
				Toggle["4e"] = Instance.new("UICorner", Toggle["4d"]);
				Toggle["4e"]["Name"] = [[MainButtonUICorner]];
				Toggle["4e"]["CornerRadius"] = UDim.new(0, 5);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Toggle.ToggleMainButton.Background.ToggleIndicator
				Toggle["4f"] = Instance.new("Frame", Toggle["4b"]);
				Toggle["4f"]["BackgroundColor3"] = Color3.fromRGB(255, 81, 81);
				Toggle["4f"]["Size"] = UDim2.new(0, 20, 0, 20);
				Toggle["4f"]["Position"] = UDim2.new(0, 34, 0.11538461595773697, 0);
				Toggle["4f"]["Name"] = [[ToggleIndicator]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Toggle.ToggleMainButton.Background.ToggleIndicator.MainButtonUICorner
				Toggle["50"] = Instance.new("UICorner", Toggle["4f"]);
				Toggle["50"]["Name"] = [[MainButtonUICorner]];
				Toggle["50"]["CornerRadius"] = UDim.new(0, 5);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Toggle.ButtonUIStroke
				Toggle["51"] = Instance.new("UIStroke", Toggle["47"]);
				Toggle["51"]["Color"] = Color3.fromRGB(102, 5, 172);
				Toggle["51"]["Thickness"] = 0;
				Toggle["51"]["Name"] = [[ButtonUIStroke]];

				Toggle["4a"].MouseButton1Click:Connect(function()
					if not State then
						Library:tween(Toggle["4f"], {Position = UDim2.new(0, 4, 0.11538461595773697, 0)})
						Library:tween(Toggle["4f"], {BackgroundColor3 = Color3.fromRGB(2, 255, 108)})
						State = true
						callback(State)
					else
						Library:tween(Toggle["4f"], {Position = UDim2.new(0, 34, 0.11538461595773697, 0)})
						Library:tween(Toggle["4f"], {BackgroundColor3 = Color3.fromRGB(255, 81, 81)})
						State = false
						callback(State)
					end
				end)

			end

			return Toggle
		end
		
		function Tab:NewDropdown(label, itemList, callback)
			
			label = label or "New Dropdown"
			itemList = itemList or {}
			callback = callback or function() end
			
			local itemNumber = 0
			local pageSize = 0
			local dropOpened = false
			
			local Dropdown = {}
			
			-- Render
			do
				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Dropdown
				Dropdown["3a"] = Instance.new("Frame", Tab["26"]);
				Dropdown["3a"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				Dropdown["3a"]["Size"] = UDim2.new(0, 478, 0, 50);
				Dropdown["3a"]["ClipsDescendants"] = true;
				Dropdown["3a"]["Position"] = UDim2.new(0, 0, 0.23716381192207336, 0);
				Dropdown["3a"]["Name"] = [[Dropdown]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Dropdown.DropdownUICorner
				Dropdown["3b"] = Instance.new("UICorner", Dropdown["3a"]);
				Dropdown["3b"]["Name"] = [[DropdownUICorner]];
				Dropdown["3b"]["CornerRadius"] = UDim.new(0, 5);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Dropdown.DropdownLabel
				Dropdown["3c"] = Instance.new("TextLabel", Dropdown["3a"]);
				Dropdown["3c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
				Dropdown["3c"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				Dropdown["3c"]["TextSize"] = 14;
				Dropdown["3c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				Dropdown["3c"]["Size"] = UDim2.new(0.8451884388923645, 0, 0, 50);
				Dropdown["3c"]["Text"] = [[Dropdown]];
				Dropdown["3c"]["Name"] = [[DropdownLabel]];
				Dropdown["3c"]["Font"] = Enum.Font.Gotham;
				Dropdown["3c"]["BackgroundTransparency"] = 1;
				Dropdown["3c"]["Position"] = UDim2.new(-0.005065329372882843, 0, 0, 0);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Dropdown.DropdownLabel.SliderButton
				Dropdown["3d"] = Instance.new("TextButton", Dropdown["3c"]);
				Dropdown["3d"]["TextWrapped"] = true;
				Dropdown["3d"]["TextSize"] = 20;
				Dropdown["3d"]["BackgroundColor3"] = Color3.fromRGB(102, 5, 172);
				Dropdown["3d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				Dropdown["3d"]["Size"] = UDim2.new(0.10962668806314468, 0, 0, 50);
				Dropdown["3d"]["Name"] = [[SliderButton]];
				Dropdown["3d"]["Text"] = [[>]];
				Dropdown["3d"]["Rotation"] = -90;
				Dropdown["3d"]["Font"] = Enum.Font.SourceSans;
				Dropdown["3d"]["Position"] = UDim2.new(-0.005024068523198366, 420, 0, 0);
				Dropdown["3d"]["BackgroundTransparency"] = 1;

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Dropdown.DropdownLabel.DropdownSelected
				Dropdown["3e"] = Instance.new("TextLabel", Dropdown["3c"]);
				Dropdown["3e"]["TextXAlignment"] = Enum.TextXAlignment.Right;
				Dropdown["3e"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				Dropdown["3e"]["TextSize"] = 14;
				Dropdown["3e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				Dropdown["3e"]["Size"] = UDim2.new(0.34505757689476013, 0, 0, 50);
				Dropdown["3e"]["Text"] = [[None]];
				Dropdown["3e"]["Name"] = [[DropdownSelected]];
				Dropdown["3e"]["Font"] = Enum.Font.Gotham;
				Dropdown["3e"]["BackgroundTransparency"] = 1;
				Dropdown["3e"]["Position"] = UDim2.new(0.7232027053833008, 0, 0, 0);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Dropdown.DropdownUIStroke
				Dropdown["3f"] = Instance.new("UIStroke", Dropdown["3a"]);
				Dropdown["3f"]["Color"] = Color3.fromRGB(102, 5, 172);
				Dropdown["3f"]["Thickness"] = 0;
				Dropdown["3f"]["Name"] = [[DropdownUIStroke]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Dropdown.DropdownUIPadding
				Dropdown["40"] = Instance.new("UIPadding", Dropdown["3a"]);
				Dropdown["40"]["Name"] = [[DropdownUIPadding]];
				Dropdown["40"]["PaddingRight"] = UDim.new(0, 2);
				Dropdown["40"]["PaddingBottom"] = UDim.new(0, 2);
				Dropdown["40"]["PaddingLeft"] = UDim.new(0, 13);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Dropdown.DropBTsScroll
				Dropdown["41"] = Instance.new("ScrollingFrame", Dropdown["3a"]);
				Dropdown["41"]["Active"] = true;
				Dropdown["41"]["BorderSizePixel"] = 0;
				Dropdown["41"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
				Dropdown["41"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				Dropdown["41"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
				Dropdown["41"]["BackgroundTransparency"] = 1;
				Dropdown["41"]["Size"] = UDim2.new(0, 477, 0, 253);
				Dropdown["41"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
				Dropdown["41"]["ScrollBarThickness"] = 0;
				Dropdown["41"]["Position"] = UDim2.new(-0.028077753260731697, 0, 0.18343046307563782, 0);
				Dropdown["41"]["Visible"] = false;
				Dropdown["41"]["Name"] = [[DropBTsScroll]];

				

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Dropdown.DropBTsScroll.DropBTsScrollUIListLayout
				Dropdown["48"] = Instance.new("UIListLayout", Dropdown["41"]);
				Dropdown["48"]["Name"] = [[DropBTsScrollUIListLayout]];
				Dropdown["48"]["Padding"] = UDim.new(0, 5);
				Dropdown["48"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Dropdown.DropBTsScroll.DropBTsScrollUIPadding
				Dropdown["49"] = Instance.new("UIPadding", Dropdown["41"]);
				Dropdown["49"]["PaddingTop"] = UDim.new(0, 3);
				Dropdown["49"]["Name"] = [[DropBTsScrollUIPadding]];
				Dropdown["49"]["PaddingRight"] = UDim.new(0, 2);
				Dropdown["49"]["PaddingBottom"] = UDim.new(0, 2);
				Dropdown["49"]["PaddingLeft"] = UDim.new(0, 13);
				
				

				

				for i, v in next, itemList do
					itemNumber = itemNumber + 1
					pageSize = pageSize + 60
					
					-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Dropdown.DropBTsScroll.DropButton
					Dropdown["42"] = Instance.new("Frame", Dropdown["41"]);
					Dropdown["42"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
					Dropdown["42"]["Size"] = UDim2.new(0, 450, 0, 50);
					Dropdown["42"]["Name"] = [[DropButton]];

					-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Dropdown.DropBTsScroll.DropButton.DropdownButtonUICorner
					Dropdown["43"] = Instance.new("UICorner", Dropdown["42"]);
					Dropdown["43"]["Name"] = [[DropdownButtonUICorner]];
					Dropdown["43"]["CornerRadius"] = UDim.new(0, 5);

					-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Dropdown.DropBTsScroll.DropButton.DropdownButtonLabel
					Dropdown["44"] = Instance.new("TextLabel", Dropdown["42"]);
					Dropdown["44"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
					Dropdown["44"]["TextSize"] = 14;
					Dropdown["44"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
					Dropdown["44"]["Size"] = UDim2.new(1, 0, 1, 0);
					Dropdown["44"]["Text"] = [[Button]];
					Dropdown["44"]["Name"] = [[DropdownButtonLabel]];
					Dropdown["44"]["Font"] = Enum.Font.Gotham;
					Dropdown["44"]["BackgroundTransparency"] = 1;

					-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Dropdown.DropBTsScroll.DropButton.DropdownMainButton
					Dropdown["45"] = Instance.new("TextButton", Dropdown["42"]);
					Dropdown["45"]["TextSize"] = 14;
					Dropdown["45"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
					Dropdown["45"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
					Dropdown["45"]["Size"] = UDim2.new(1, 0, 1, 0);
					Dropdown["45"]["Name"] = [[DropdownMainButton]];
					Dropdown["45"]["Text"] = [[]];
					Dropdown["45"]["Font"] = Enum.Font.Gotham;
					Dropdown["45"]["BackgroundTransparency"] = 1;

					-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Dropdown.DropBTsScroll.DropButton.DropdownMainButton.MainButtonUICorner
					Dropdown["46"] = Instance.new("UICorner", Dropdown["45"]);
					Dropdown["46"]["Name"] = [[MainButtonUICorner]];
					Dropdown["46"]["CornerRadius"] = UDim.new(0, 5);

					-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.Dropdown.DropBTsScroll.DropButton.DropdownButtonUIStroke
					Dropdown["47"] = Instance.new("UIStroke", Dropdown["42"]);
					Dropdown["47"]["Color"] = Color3.fromRGB(102, 5, 172);
					Dropdown["47"]["Name"] = [[DropdownButtonUIStroke]];
					Dropdown["47"]["Thickness"] = 1
					
					Dropdown["44"].Text = v

					Dropdown["45"].MouseButton1Click:Connect(function()
						Dropdown["3e"].Text = v
						
						pcall(callback,v)
						Library:tween(Dropdown["47"], {["Thickness"] = 3})
						Library:tween(Dropdown["47"], {["Thickness"] = 1})
						Library:tween(Dropdown["3a"], {Size = UDim2.new(0, 478, 0, 50)})
						Library:tween(Dropdown["3d"], {Rotation = -90})
						Dropdown["41"]["Visible"] = false;
						dropOpened = false
					end)
				end
			end
			
			
			Dropdown["45"].MouseEnter:Connect(function()
				Library:tween(Dropdown["47"], {["Thickness"] = 1})
			end)

			Dropdown["45"].MouseLeave:Connect(function()
				Library:tween(Dropdown["47"], {["Thickness"] = 0})
			end)

			
			
			
			Dropdown["3d"].MouseButton1Click:Connect(function()
				if dropOpened then
					Library:tween(Dropdown["3a"], {Size = UDim2.new(0, 478, 0, 50)})
					Library:tween(Dropdown["3d"], {Rotation = -90})
					Dropdown["41"]["Visible"] = false;
				else
					Library:tween(Dropdown["3a"], {Size = UDim2.new(0, 478, 0, 310)})
					Library:tween(Dropdown["3d"], {Rotation = 90})
					Dropdown["41"]["Visible"] = true;
				end
				dropOpened = not dropOpened
			end)
			
			
			
			return Dropdown
		end
		
		function Tab:NewColorPicker(label, defaultColor, callback)
			label = label or "New Color Picker"
			defaultColor = defaultColor or Color3.fromRGB(1,1,1)
			callback = callback or function() end
			
			local ColorPicker = {}
			
			do
				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker
				ColorPicker["55"] = Instance.new("Frame", Tab["26"]);
				ColorPicker["55"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				ColorPicker["55"]["Size"] = UDim2.new(0, 478, 0, 50);
				ColorPicker["55"]["ClipsDescendants"] = true;
				ColorPicker["55"]["Position"] = UDim2.new(0, 0, 0.4156479239463806, 0);
				ColorPicker["55"]["Name"] = [[ColorPicker]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerUICorner
				ColorPicker["56"] = Instance.new("UICorner", ColorPicker["55"]);
				ColorPicker["56"]["Name"] = [[ColorPickerUICorner]];
				ColorPicker["56"]["CornerRadius"] = UDim.new(0, 5);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerLabel
				ColorPicker["57"] = Instance.new("TextLabel", ColorPicker["55"]);
				ColorPicker["57"]["TextXAlignment"] = Enum.TextXAlignment.Left;
				ColorPicker["57"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				ColorPicker["57"]["TextSize"] = 14;
				ColorPicker["57"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["57"]["Size"] = UDim2.new(0.8451884388923645, 0, 0, 50);
				ColorPicker["57"]["Text"] = label;
				ColorPicker["57"]["Name"] = [[ColorPickerLabel]];
				ColorPicker["57"]["Font"] = Enum.Font.Gotham;
				ColorPicker["57"]["BackgroundTransparency"] = 1;
				ColorPicker["57"]["Position"] = UDim2.new(0.023012423887848854, 0, 0, 0);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerLabel.ColorPickerMainButton
				ColorPicker["58"] = Instance.new("TextButton", ColorPicker["57"]);
				ColorPicker["58"]["TextSize"] = 14;
				ColorPicker["58"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				ColorPicker["58"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["58"]["Size"] = UDim2.new(0, 30, 0, 30);
				ColorPicker["58"]["Name"] = [[ColorPickerMainButton]];
				ColorPicker["58"]["Text"] = [[]];
				ColorPicker["58"]["Font"] = Enum.Font.Gotham;
				ColorPicker["58"]["Position"] = UDim2.new(0, 430, 0, 10);
				ColorPicker["58"]["BackgroundTransparency"] = 1;

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerLabel.ColorPickerMainButton.ColorPickerIndicator
				ColorPicker["59"] = Instance.new("Frame", ColorPicker["58"]);
				ColorPicker["59"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["59"]["Size"] = UDim2.new(1, 0, 1, 0);
				ColorPicker["59"]["Name"] = [[ColorPickerIndicator]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerLabel.ColorPickerMainButton.ColorPickerIndicator.ColorPickerIndicatorUICorner
				ColorPicker["5a"] = Instance.new("UICorner", ColorPicker["59"]);
				ColorPicker["5a"]["Name"] = [[ColorPickerIndicatorUICorner]];
				ColorPicker["5a"]["CornerRadius"] = UDim.new(0, 5);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerUIStroke
				ColorPicker["5b"] = Instance.new("UIStroke", ColorPicker["55"]);
				ColorPicker["5b"]["Color"] = Color3.fromRGB(102, 5, 172);
				ColorPicker["5b"]["Thickness"] = 0;
				ColorPicker["5b"]["Name"] = [[ColorPickerUIStroke]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame
				ColorPicker["5c"] = Instance.new("Frame", ColorPicker["55"]);
				ColorPicker["5c"]["BorderSizePixel"] = 0;
				ColorPicker["5c"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
				ColorPicker["5c"]["Size"] = UDim2.new(0, 264, 0, 264);
				ColorPicker["5c"]["Position"] = UDim2.new(0, 7, 0.10000000149011612, 25);
				ColorPicker["5c"]["Name"] = [[ColorPickerMainFrame]];
				ColorPicker["5c"]["Visible"] = false

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.ColorPickerMainFrameUICorner
				ColorPicker["5d"] = Instance.new("UICorner", ColorPicker["5c"]);
				ColorPicker["5d"]["Name"] = [[ColorPickerMainFrameUICorner]];
				ColorPicker["5d"]["CornerRadius"] = UDim.new(0, 5);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Gradient
				ColorPicker["5e"] = Instance.new("ImageLabel", ColorPicker["5c"]);
				ColorPicker["5e"]["SizeConstraint"] = Enum.SizeConstraint.RelativeYY;
				ColorPicker["5e"]["BorderSizePixel"] = 0;
				ColorPicker["5e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["5e"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
				ColorPicker["5e"]["Image"] = [[rbxassetid://328298876]];
				ColorPicker["5e"]["Size"] = UDim2.new(0.9583333134651184, 0, 0.9583333134651184, 0);
				ColorPicker["5e"]["ClipsDescendants"] = true;
				ColorPicker["5e"]["BorderColor3"] = Color3.fromRGB(161, 161, 161);
				ColorPicker["5e"]["Name"] = [[Gradient]];
				ColorPicker["5e"]["Position"] = UDim2.new(0.5, 0, 0.4941366910934448, 0);

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Gradient.Cursor
				ColorPicker["5f"] = Instance.new("Frame", ColorPicker["5e"]);
				ColorPicker["5f"]["ZIndex"] = 2;
				ColorPicker["5f"]["BorderSizePixel"] = 0;
				ColorPicker["5f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["5f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["5f"]["Position"] = UDim2.new(1, -1, 0, 1);
				ColorPicker["5f"]["Name"] = [[Cursor]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Gradient.Cursor.Vertical
				ColorPicker["60"] = Instance.new("Frame", ColorPicker["5f"]);
				ColorPicker["60"]["ZIndex"] = 2;
				ColorPicker["60"]["BorderSizePixel"] = 0;
				ColorPicker["60"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["60"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
				ColorPicker["60"]["Size"] = UDim2.new(0, 2, 0, 20);
				ColorPicker["60"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["60"]["Name"] = [[Vertical]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Gradient.Cursor.Horizontal
				ColorPicker["61"] = Instance.new("Frame", ColorPicker["5f"]);
				ColorPicker["61"]["ZIndex"] = 2;
				ColorPicker["61"]["BorderSizePixel"] = 0;
				ColorPicker["61"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["61"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
				ColorPicker["61"]["Size"] = UDim2.new(0, 20, 0, 2);
				ColorPicker["61"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["61"]["Name"] = [[Horizontal]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In
				ColorPicker["62"] = Instance.new("Frame", ColorPicker["5c"]);
				ColorPicker["62"]["SizeConstraint"] = Enum.SizeConstraint.RelativeYY;
				ColorPicker["62"]["BorderSizePixel"] = 0;
				ColorPicker["62"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				ColorPicker["62"]["AnchorPoint"] = Vector2.new(0, 1);
				ColorPicker["62"]["BackgroundTransparency"] = 1;
				ColorPicker["62"]["Size"] = UDim2.new(0.6589999794960022, 20, 0.25667843222618103, -10);
				ColorPicker["62"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["62"]["Position"] = UDim2.new(0.8169999718666077, 55, 0.04924231022596359, 150);
				ColorPicker["62"]["Name"] = [[Fill In]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values
				ColorPicker["63"] = Instance.new("Frame", ColorPicker["62"]);
				ColorPicker["63"]["BorderSizePixel"] = 0;
				ColorPicker["63"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				ColorPicker["63"]["BackgroundTransparency"] = 1;
				ColorPicker["63"]["Size"] = UDim2.new(1, 0, 1, 0);
				ColorPicker["63"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["63"]["Name"] = [[Values]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.List
				ColorPicker["64"] = Instance.new("UIListLayout", ColorPicker["63"]);
				ColorPicker["64"]["FillDirection"] = Enum.FillDirection.Horizontal;
				ColorPicker["64"]["Name"] = [[List]];
				ColorPicker["64"]["Padding"] = UDim.new(0, 10);
				ColorPicker["64"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.RGB
				ColorPicker["65"] = Instance.new("Frame", ColorPicker["63"]);
				ColorPicker["65"]["BorderSizePixel"] = 0;
				ColorPicker["65"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				ColorPicker["65"]["Size"] = UDim2.new(0.5, -5, 0.75, 0);
				ColorPicker["65"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["65"]["Position"] = UDim2.new(0.375, 0, 1, -5);
				ColorPicker["65"]["Name"] = [[RGB]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.RGB.R
				ColorPicker["66"] = Instance.new("Frame", ColorPicker["65"]);
				ColorPicker["66"]["BorderSizePixel"] = 0;
				ColorPicker["66"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["66"]["BackgroundTransparency"] = 1;
				ColorPicker["66"]["Size"] = UDim2.new(1, 0, 0.25, 0);
				ColorPicker["66"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["66"]["Name"] = [[R]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.RGB.R.Title
				ColorPicker["67"] = Instance.new("TextLabel", ColorPicker["66"]);
				ColorPicker["67"]["TextWrapped"] = true;
				ColorPicker["67"]["BorderSizePixel"] = 0;
				ColorPicker["67"]["TextScaled"] = true;
				ColorPicker["67"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["67"]["TextSize"] = 14;
				ColorPicker["67"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["67"]["Size"] = UDim2.new(0.5, -5, 1, 0);
				ColorPicker["67"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["67"]["Text"] = [[Red:]];
				ColorPicker["67"]["Name"] = [[Title]];
				ColorPicker["67"]["Font"] = Enum.Font.Gotham;
				ColorPicker["67"]["BackgroundTransparency"] = 1;

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.RGB.R.Value
				ColorPicker["68"] = Instance.new("TextBox", ColorPicker["66"]);
				ColorPicker["68"]["PlaceholderColor3"] = Color3.fromRGB(179, 179, 179);
				ColorPicker["68"]["BorderSizePixel"] = 0;
				ColorPicker["68"]["TextColor3"] = Color3.fromRGB(179, 179, 179);
				ColorPicker["68"]["TextWrapped"] = true;
				ColorPicker["68"]["TextSize"] = 14;
				ColorPicker["68"]["TextScaled"] = true;
				ColorPicker["68"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
				ColorPicker["68"]["AnchorPoint"] = Vector2.new(1, 0);
				ColorPicker["68"]["Size"] = UDim2.new(0.5, -5, 1, 0);
				ColorPicker["68"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["68"]["Text"] = [[255]];
				ColorPicker["68"]["Position"] = UDim2.new(1, 0, 0, 0);
				ColorPicker["68"]["Font"] = Enum.Font.Gotham;
				ColorPicker["68"]["Name"] = [[Value]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.RGB.List
				ColorPicker["69"] = Instance.new("UIListLayout", ColorPicker["65"]);
				ColorPicker["69"]["Name"] = [[List]];
				ColorPicker["69"]["Padding"] = UDim.new(0.125, 0);
				ColorPicker["69"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.RGB.B
				ColorPicker["6a"] = Instance.new("Frame", ColorPicker["65"]);
				ColorPicker["6a"]["BorderSizePixel"] = 0;
				ColorPicker["6a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["6a"]["BackgroundTransparency"] = 1;
				ColorPicker["6a"]["Size"] = UDim2.new(1, 0, 0.25, 0);
				ColorPicker["6a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["6a"]["Name"] = [[B]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.RGB.B.Title
				ColorPicker["6b"] = Instance.new("TextLabel", ColorPicker["6a"]);
				ColorPicker["6b"]["TextWrapped"] = true;
				ColorPicker["6b"]["BorderSizePixel"] = 0;
				ColorPicker["6b"]["TextScaled"] = true;
				ColorPicker["6b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["6b"]["TextSize"] = 14;
				ColorPicker["6b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["6b"]["Size"] = UDim2.new(0.5, -5, 1, 0);
				ColorPicker["6b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["6b"]["Text"] = [[Blue:]];
				ColorPicker["6b"]["Name"] = [[Title]];
				ColorPicker["6b"]["Font"] = Enum.Font.Gotham;
				ColorPicker["6b"]["BackgroundTransparency"] = 1;

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.RGB.B.Value
				ColorPicker["6c"] = Instance.new("TextBox", ColorPicker["6a"]);
				ColorPicker["6c"]["PlaceholderColor3"] = Color3.fromRGB(179, 179, 179);
				ColorPicker["6c"]["BorderSizePixel"] = 0;
				ColorPicker["6c"]["TextColor3"] = Color3.fromRGB(179, 179, 179);
				ColorPicker["6c"]["TextWrapped"] = true;
				ColorPicker["6c"]["TextSize"] = 14;
				ColorPicker["6c"]["TextScaled"] = true;
				ColorPicker["6c"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
				ColorPicker["6c"]["AnchorPoint"] = Vector2.new(1, 0);
				ColorPicker["6c"]["Size"] = UDim2.new(0.5, -5, 1, 0);
				ColorPicker["6c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["6c"]["Text"] = [[0]];
				ColorPicker["6c"]["Position"] = UDim2.new(1, 0, 0, 0);
				ColorPicker["6c"]["Font"] = Enum.Font.Gotham;
				ColorPicker["6c"]["Name"] = [[Value]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.RGB.G
				ColorPicker["6d"] = Instance.new("Frame", ColorPicker["65"]);
				ColorPicker["6d"]["BorderSizePixel"] = 0;
				ColorPicker["6d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["6d"]["BackgroundTransparency"] = 1;
				ColorPicker["6d"]["Size"] = UDim2.new(1, 0, 0.25, 0);
				ColorPicker["6d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["6d"]["Name"] = [[G]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.RGB.G.Title
				ColorPicker["6e"] = Instance.new("TextLabel", ColorPicker["6d"]);
				ColorPicker["6e"]["TextWrapped"] = true;
				ColorPicker["6e"]["BorderSizePixel"] = 0;
				ColorPicker["6e"]["TextScaled"] = true;
				ColorPicker["6e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["6e"]["TextSize"] = 14;
				ColorPicker["6e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["6e"]["Size"] = UDim2.new(0.5, -5, 1, 0);
				ColorPicker["6e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["6e"]["Text"] = [[Green:]];
				ColorPicker["6e"]["Name"] = [[Title]];
				ColorPicker["6e"]["Font"] = Enum.Font.Gotham;
				ColorPicker["6e"]["BackgroundTransparency"] = 1;

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.RGB.G.Value
				ColorPicker["6f"] = Instance.new("TextBox", ColorPicker["6d"]);
				ColorPicker["6f"]["PlaceholderColor3"] = Color3.fromRGB(179, 179, 179);
				ColorPicker["6f"]["BorderSizePixel"] = 0;
				ColorPicker["6f"]["TextColor3"] = Color3.fromRGB(179, 179, 179);
				ColorPicker["6f"]["TextWrapped"] = true;
				ColorPicker["6f"]["TextSize"] = 14;
				ColorPicker["6f"]["TextScaled"] = true;
				ColorPicker["6f"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
				ColorPicker["6f"]["AnchorPoint"] = Vector2.new(1, 0);
				ColorPicker["6f"]["Size"] = UDim2.new(0.5, -5, 1, 0);
				ColorPicker["6f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["6f"]["Text"] = [[0]];
				ColorPicker["6f"]["Position"] = UDim2.new(1, 0, 0, 0);
				ColorPicker["6f"]["Font"] = Enum.Font.Gotham;
				ColorPicker["6f"]["Name"] = [[Value]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.HSV
				ColorPicker["70"] = Instance.new("Frame", ColorPicker["63"]);
				ColorPicker["70"]["BorderSizePixel"] = 0;
				ColorPicker["70"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				ColorPicker["70"]["Size"] = UDim2.new(0.5, -5, 0.75, 0);
				ColorPicker["70"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["70"]["Position"] = UDim2.new(0.375, 0, 1, -5);
				ColorPicker["70"]["Name"] = [[HSV]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.HSV.H
				ColorPicker["71"] = Instance.new("Frame", ColorPicker["70"]);
				ColorPicker["71"]["BorderSizePixel"] = 0;
				ColorPicker["71"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["71"]["BackgroundTransparency"] = 1;
				ColorPicker["71"]["Size"] = UDim2.new(1, 0, 0.25, 0);
				ColorPicker["71"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["71"]["Name"] = [[H]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.HSV.H.Title
				ColorPicker["72"] = Instance.new("TextLabel", ColorPicker["71"]);
				ColorPicker["72"]["TextWrapped"] = true;
				ColorPicker["72"]["BorderSizePixel"] = 0;
				ColorPicker["72"]["TextScaled"] = true;
				ColorPicker["72"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["72"]["TextSize"] = 14;
				ColorPicker["72"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["72"]["Size"] = UDim2.new(0.5, -5, 1, 0);
				ColorPicker["72"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["72"]["Text"] = [[Hue:]];
				ColorPicker["72"]["Name"] = [[Title]];
				ColorPicker["72"]["Font"] = Enum.Font.Gotham;
				ColorPicker["72"]["BackgroundTransparency"] = 1;

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.HSV.H.Value
				ColorPicker["73"] = Instance.new("TextBox", ColorPicker["71"]);
				ColorPicker["73"]["PlaceholderColor3"] = Color3.fromRGB(179, 179, 179);
				ColorPicker["73"]["BorderSizePixel"] = 0;
				ColorPicker["73"]["TextColor3"] = Color3.fromRGB(179, 179, 179);
				ColorPicker["73"]["TextWrapped"] = true;
				ColorPicker["73"]["TextSize"] = 14;
				ColorPicker["73"]["TextScaled"] = true;
				ColorPicker["73"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
				ColorPicker["73"]["AnchorPoint"] = Vector2.new(1, 0);
				ColorPicker["73"]["Size"] = UDim2.new(0.5, -5, 1, 0);
				ColorPicker["73"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["73"]["Text"] = [[0]];
				ColorPicker["73"]["Position"] = UDim2.new(1, 0, 0, 0);
				ColorPicker["73"]["Font"] = Enum.Font.Gotham;
				ColorPicker["73"]["Name"] = [[Value]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.HSV.List
				ColorPicker["74"] = Instance.new("UIListLayout", ColorPicker["70"]);
				ColorPicker["74"]["Name"] = [[List]];
				ColorPicker["74"]["Padding"] = UDim.new(0.125, 0);
				ColorPicker["74"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.HSV.S
				ColorPicker["75"] = Instance.new("Frame", ColorPicker["70"]);
				ColorPicker["75"]["BorderSizePixel"] = 0;
				ColorPicker["75"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["75"]["BackgroundTransparency"] = 1;
				ColorPicker["75"]["Size"] = UDim2.new(1, 0, 0.25, 0);
				ColorPicker["75"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["75"]["Name"] = [[S]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.HSV.S.Title
				ColorPicker["76"] = Instance.new("TextLabel", ColorPicker["75"]);
				ColorPicker["76"]["TextWrapped"] = true;
				ColorPicker["76"]["BorderSizePixel"] = 0;
				ColorPicker["76"]["TextScaled"] = true;
				ColorPicker["76"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["76"]["TextSize"] = 14;
				ColorPicker["76"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["76"]["Size"] = UDim2.new(0.5, -5, 1, 0);
				ColorPicker["76"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["76"]["Text"] = [[Sat:]];
				ColorPicker["76"]["Name"] = [[Title]];
				ColorPicker["76"]["Font"] = Enum.Font.Gotham;
				ColorPicker["76"]["BackgroundTransparency"] = 1;

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.HSV.S.Value
				ColorPicker["77"] = Instance.new("TextBox", ColorPicker["75"]);
				ColorPicker["77"]["PlaceholderColor3"] = Color3.fromRGB(179, 179, 179);
				ColorPicker["77"]["BorderSizePixel"] = 0;
				ColorPicker["77"]["TextColor3"] = Color3.fromRGB(179, 179, 179);
				ColorPicker["77"]["TextWrapped"] = true;
				ColorPicker["77"]["TextSize"] = 14;
				ColorPicker["77"]["TextScaled"] = true;
				ColorPicker["77"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
				ColorPicker["77"]["AnchorPoint"] = Vector2.new(1, 0);
				ColorPicker["77"]["Size"] = UDim2.new(0.5, -5, 1, 0);
				ColorPicker["77"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["77"]["Text"] = [[1]];
				ColorPicker["77"]["Position"] = UDim2.new(1, 0, 0, 0);
				ColorPicker["77"]["Font"] = Enum.Font.Gotham;
				ColorPicker["77"]["Name"] = [[Value]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.HSV.V
				ColorPicker["78"] = Instance.new("Frame", ColorPicker["70"]);
				ColorPicker["78"]["BorderSizePixel"] = 0;
				ColorPicker["78"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["78"]["BackgroundTransparency"] = 1;
				ColorPicker["78"]["Size"] = UDim2.new(1, 0, 0.25, 0);
				ColorPicker["78"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["78"]["Name"] = [[V]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.HSV.V.Title
				ColorPicker["79"] = Instance.new("TextLabel", ColorPicker["78"]);
				ColorPicker["79"]["TextWrapped"] = true;
				ColorPicker["79"]["BorderSizePixel"] = 0;
				ColorPicker["79"]["TextScaled"] = true;
				ColorPicker["79"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["79"]["TextSize"] = 14;
				ColorPicker["79"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["79"]["Size"] = UDim2.new(0.5, -5, 1, 0);
				ColorPicker["79"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["79"]["Text"] = [[Value:]];
				ColorPicker["79"]["Name"] = [[Title]];
				ColorPicker["79"]["Font"] = Enum.Font.Gotham;
				ColorPicker["79"]["BackgroundTransparency"] = 1;

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Values.HSV.V.Value
				ColorPicker["7a"] = Instance.new("TextBox", ColorPicker["78"]);
				ColorPicker["7a"]["PlaceholderColor3"] = Color3.fromRGB(179, 179, 179);
				ColorPicker["7a"]["BorderSizePixel"] = 0;
				ColorPicker["7a"]["TextColor3"] = Color3.fromRGB(179, 179, 179);
				ColorPicker["7a"]["TextWrapped"] = true;
				ColorPicker["7a"]["TextSize"] = 14;
				ColorPicker["7a"]["TextScaled"] = true;
				ColorPicker["7a"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
				ColorPicker["7a"]["AnchorPoint"] = Vector2.new(1, 0);
				ColorPicker["7a"]["Size"] = UDim2.new(0.5, -5, 1, 0);
				ColorPicker["7a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["7a"]["Text"] = [[1]];
				ColorPicker["7a"]["Position"] = UDim2.new(1, 0, 0, 0);
				ColorPicker["7a"]["Font"] = Enum.Font.Gotham;
				ColorPicker["7a"]["Name"] = [[Value]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Hex
				ColorPicker["7b"] = Instance.new("Frame", ColorPicker["62"]);
				ColorPicker["7b"]["BorderSizePixel"] = 0;
				ColorPicker["7b"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
				ColorPicker["7b"]["AnchorPoint"] = Vector2.new(0, 1);
				ColorPicker["7b"]["Size"] = UDim2.new(0.5, -5, 0.18799999356269836, 0);
				ColorPicker["7b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["7b"]["Position"] = UDim2.new(0, 50, 1, 0);
				ColorPicker["7b"]["Name"] = [[Hex]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Hex.Value
				ColorPicker["7c"] = Instance.new("TextBox", ColorPicker["7b"]);
				ColorPicker["7c"]["PlaceholderColor3"] = Color3.fromRGB(179, 179, 179);
				ColorPicker["7c"]["BorderSizePixel"] = 0;
				ColorPicker["7c"]["TextColor3"] = Color3.fromRGB(183, 183, 183);
				ColorPicker["7c"]["TextWrapped"] = true;
				ColorPicker["7c"]["TextSize"] = 14;
				ColorPicker["7c"]["TextScaled"] = true;
				ColorPicker["7c"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
				ColorPicker["7c"]["AnchorPoint"] = Vector2.new(1, 0);
				ColorPicker["7c"]["Size"] = UDim2.new(0.5, -5, 1, 0);
				ColorPicker["7c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["7c"]["Text"] = [[#FF0000]];
				ColorPicker["7c"]["Position"] = UDim2.new(1, 0, 0, 0);
				ColorPicker["7c"]["Font"] = Enum.Font.Gotham;
				ColorPicker["7c"]["Name"] = [[Value]];

				-- StarterGui.JaelLibrary.MainFrame.Tabs.Newtab.TabScrolling.ColorPicker.ColorPickerMainFrame.Fill In.Hex.Title
				ColorPicker["7d"] = Instance.new("TextLabel", ColorPicker["7b"]);
				ColorPicker["7d"]["TextWrapped"] = true;
				ColorPicker["7d"]["BorderSizePixel"] = 0;
				ColorPicker["7d"]["TextScaled"] = true;
				ColorPicker["7d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["7d"]["TextSize"] = 14;
				ColorPicker["7d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				ColorPicker["7d"]["Size"] = UDim2.new(0.5, -5, 1, 0);
				ColorPicker["7d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				ColorPicker["7d"]["Text"] = [[Hex:]];
				ColorPicker["7d"]["Name"] = [[Title]];
				ColorPicker["7d"]["Font"] = Enum.Font.Gotham;
				ColorPicker["7d"]["BackgroundTransparency"] = 1;
				
				local opened = false
				
				ColorPicker["58"].MouseButton1Click:Connect(function()
					if not opened then
						Library:tween(ColorPicker["55"], {Size = UDim2.new(0, 478,0, 334)})
						ColorPicker["5c"]["Visible"] = true
						opened = true
					else
						Library:tween(ColorPicker["55"], {Size = UDim2.new(0, 478,0, 50)})
						ColorPicker["5c"]["Visible"] = false
						opened = false
					end
				end)
				
				ColorPicker["123123"] = Instance.new("LocalScript",ColorPicker["5c"]);
				ColorPicker["123123"]["Name"] = [[Controller]];
				
				local function C_2()
					
					local script = ColorPicker["123123"];
					--- Services ---
					local Players = game:GetService("Players")
					local TextService = game:GetService("TextService")
					local UserInputService = game:GetService("UserInputService")

					--- Declarations ---
					local FillIn = script.Parent:WaitForChild("Fill In")
					local Values = FillIn:WaitForChild("Values")

					local RGB = Values:WaitForChild("RGB")
					local HSV = Values:WaitForChild("HSV")

					local Hex = FillIn:WaitForChild("Hex")


					local Gradient = script.Parent:WaitForChild("Gradient")
					local Cursor = Gradient:WaitForChild("Cursor")

					--- Player ---
					local Player = Players.LocalPlayer
					local Mouse = Player:GetMouse()

					--- Objects ---
					local HexadecimalValues = {
						-- Decimal to Hex
						[10] = "A",
						[11] = "B",
						[12] = "C",
						[13] = "D",
						[14] = "E",
						[15] = "F",
					}

					--- Data ---
					local Down = false

					--- Definitions ---
					local Abs = math.abs
					local Clamp = math.clamp
					local Floor = math.floor

					local Tonumber = tonumber

					--- Functions ---
					local function UpdateCursorPosition(h, s)
						local gradientSize = Gradient.AbsoluteSize
						local sizeScale = 360 / gradientSize.X
						ColorPicker["5f"].Position = UDim2.new(0, gradientSize.X - (h * 360) / sizeScale, 0, gradientSize.Y - (s * 360) / sizeScale)
					end

					local function InBounds()
						local mousePosition = Vector2.new(Mouse.X, Mouse.Y)
						local gradientPosition = Gradient.AbsolutePosition
						local gradientSize = Gradient.AbsoluteSize

						return (mousePosition.X < (gradientPosition.X + gradientSize.X) and mousePosition.X > gradientPosition.X) and (mousePosition.Y < (gradientPosition.Y + gradientSize.Y) and mousePosition.Y > gradientPosition.Y)
					end

					local function HexToDecimal(hex)
						return Tonumber(hex, 16)
					end

					local function DecimalToHex(decimal)
						local hex = ""
						local integer, remainder

						while true do
							integer = math.modf(decimal / 16)
							remainder = decimal % 16
							decimal = integer

							hex = hex .. (HexadecimalValues[remainder] or remainder)

							if integer == 0 then
								break
							end
						end

						if #hex == 1 then
							return "0" .. hex
						end

						return hex:reverse()
					end

					local function HexToRGB(hex)
						hex = hex:sub(2):upper()

						if #hex == 3 then
							local f, s, t = hex:sub(1, 1), hex:sub(2, 2), hex:sub(3, 3)
							return hex, Tonumber(f .. f, 16), Tonumber(s .. s, 16), Tonumber(t .. t, 16)
						elseif #hex == 6 then
							return hex, Tonumber(hex:sub(1, 2), 16), Tonumber(hex:sub(3, 4), 16), Tonumber(hex:sub(5, 6), 16)
						elseif #hex ~= 3 and #hex < 6 then
							hex = hex .. string.rep("0", 6 - #hex)
							return hex, Tonumber(hex:sub(1, 2), 16), Tonumber(hex:sub(3, 4), 16), Tonumber(hex:sub(5, 6), 16)
						end
					end

					local function RGBToHex(r, g, b)
						return "#" .. DecimalToHex(r) .. DecimalToHex(g) .. DecimalToHex(b)
					end

					local function SanitizeNumber(value, rgbValue, isHue)
						if value then
							value = (value ~= value and 0) or (Tonumber(value) or 0)

							if isHue then
								return Clamp(value, 0, 360)
							else
								return Clamp(value, 0, (rgbValue and 255 or 1))
							end
						end
					end

					local function UpdateColorWithRGB()
						local color = Color3.fromRGB(Tonumber(RGB.R.Value.Text), Tonumber(RGB.G.Value.Text), Tonumber(RGB.B.Value.Text))
						ColorPicker["58"]:WaitForChild("ColorPickerIndicator").BackgroundColor3 = color
						--print(Tonumber(RGB.R.Value.Text), Tonumber(RGB.G.Value.Text), Tonumber(RGB.B.Value.Text))
						callback(Tonumber(RGB.R.Value.Text), Tonumber(RGB.G.Value.Text), Tonumber(RGB.B.Value.Text))
						return color
					end

					local function UpdateColorWithHSV()
						local color = Color3.fromHSV((Tonumber(HSV.H.Value.Text) or 0) / 360, Tonumber(HSV.S.Value.Text) or 1, Tonumber(HSV.V.Value.Text) or 1)
						ColorPicker["58"]:WaitForChild("ColorPickerIndicator").BackgroundColor3 = color

						return color
					end

					local function UpdateFillIns(color)
						if color then
							local h, s, v = Color3.toHSV(color)
							local r, g, b = Floor(color.r * 255 + 0.5), Floor(color.g * 255 + 0.5), Floor(color.b * 255 + 0.5)

							HSV.H.Value.Text = Floor(h * 360 + 0.5)
							HSV.S.Value.Text = Floor(s * 1000 + 0.5) / 1000
							HSV.V.Value.Text = Floor(v * 1000 + 0.5) / 1000

							RGB.R.Value.Text = r
							RGB.G.Value.Text = g
							RGB.B.Value.Text = b

							Hex.Value.Text = RGBToHex(r, g, b)
							UpdateCursorPosition(h, s)
						end
					end

					local function GetColor()
						if InBounds() then
							local gradientSize = Gradient.AbsoluteSize
							UserInputService.MouseIconEnabled = false

							local sizeScale = 360 / gradientSize.X
							local offset = Vector2.new(Mouse.X, Mouse.Y) - (Gradient.AbsolutePosition + gradientSize / 2)

							local hue = Abs((offset.X * sizeScale - 180) / 360)
							local saturation = Abs((offset.Y * sizeScale - 180) / 360)
							local color = Color3.fromHSV(hue, saturation, 1)

							ColorPicker["58"]:WaitForChild("ColorPickerIndicator").BackgroundColor3 = color
							ColorPicker["5f"].Position = UDim2.new(0, Clamp(offset.X + gradientSize.X / 2, 0, gradientSize.X), 0, Clamp(offset.Y + gradientSize.Y / 2, 0, gradientSize.Y))

							return color
						end

						UserInputService.MouseIconEnabled = true
						return nil
					end

					--- Execution ---
					Mouse.Button1Down:Connect(function()
						UpdateFillIns(GetColor())
						Down = true
					end)

					Mouse.Move:Connect(function()
						if Down then
							UpdateFillIns(GetColor())
						else
							UserInputService.MouseIconEnabled = true
						end
					end)

					Mouse.Button1Up:Connect(function()
						Down = false
					end)

					do -- Fill In Events
						local R = RGB.R.Value
						local G = RGB.G.Value
						local B = RGB.B.Value

						local H = HSV.H.Value
						local S = HSV.S.Value
						local V = HSV.V.Value

						local Hex = Hex.Value

						do -- RGB
							R:GetPropertyChangedSignal("Text"):Connect(function()
								local text = R.Text

								if #text ~= 0 then
									R.Text = SanitizeNumber(text, true)
									UpdateFillIns(UpdateColorWithRGB())
								end
							end)

							G:GetPropertyChangedSignal("Text"):Connect(function()
								local text = G.Text

								if #text ~= 0 then
									G.Text = SanitizeNumber(text, true)
									UpdateFillIns(UpdateColorWithRGB())
								end
							end)

							B:GetPropertyChangedSignal("Text"):Connect(function()
								local text = B.Text

								if #text ~= 0 then
									B.Text = SanitizeNumber(text, true)
									UpdateFillIns(UpdateColorWithRGB())
								end
							end)
						end

						do -- HSV
							H.FocusLost:Connect(function(enterPressed)
								if enterPressed then
									local text = H.Text

									if #text ~= 0 then
										H.Text = SanitizeNumber(text, false, true)
										UpdateFillIns(UpdateColorWithHSV())
									end
								end
							end)

							S.FocusLost:Connect(function(enterPressed)
								if enterPressed then
									local text = S.Text

									if #text ~= 0 then
										S.Text = SanitizeNumber(text, false)
										UpdateFillIns(UpdateColorWithHSV())
									end
								end
							end)

							V.FocusLost:Connect(function(enterPressed)
								if enterPressed then
									local text = V.Text

									if #text ~= 0 then
										V.Text = SanitizeNumber(text, false)
										UpdateFillIns(UpdateColorWithHSV())
									end
								end
							end)
						end

						Hex:GetPropertyChangedSignal("Text"):Connect(function()
							local text = Hex.Text

							if #text ~= 0 then
								local index = 0
								local s, e = text:find("#")

								text = text:gsub("#", function()
									index = index + 1

									if s == 1 then
										return index == 1 and "#" or ""
									else
										return ""
									end
								end)

								if text:find("#") ~= 1 then
									text = "#" .. text
								end

								Hex.Text = text
							end
						end)

						Hex.FocusLost:Connect(function(enterPressed)
							if enterPressed then
								local hex, r, g, b = HexToRGB(Hex.Text)
								local h, s, v = Color3.toHSV(Color3.fromRGB(r, g, b))

								Hex.Text = hex
								UpdateFillIns(Color3.fromRGB(r, g, b))
							end
						end)
					end
				end;
				task.spawn(C_2);
				
				
			end
			
			return ColorPicker
		end
		
		return Tab

	end

	return GUI
end

return Library
